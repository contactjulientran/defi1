{
  "name": "defi1",
  "version": "1.0.0",
  "description": "D√©fi: Voting App - Syst√®me de vote [üöÄ](https://ecole.alyra.fr/mod/assign/view.php?id=727)  Un smart contract de vote peut √™tre simple ou complexe, selon les exigences des √©lections que vous souhaitez soutenir. Le vote peut porter sur un petit nombre de propositions (ou de candidats) pr√©s√©lectionn√©es, ou sur un nombre potentiellement important de propositions sugg√©r√©es de mani√®re dynamique par les √©lecteurs eux-m√™mes.  Dans ce cadres, vous allez √©crire un smart contract de vote pour une petite organisation. Les √©lecteurs, que l'organisation conna√Æt tous, sont inscrits sur une liste blanche (whitelist) gr√¢ce √† leur adresse Ethereum, peuvent soumettre de nouvelles propositions lors d'une session d'enregistrement des propositions, et peuvent voter sur les propositions lors de la session de vote.  Le vote n'est pas secret ; chaque √©lecteur peut voir les votes des autres.  Le gagnant est d√©termin√© √† la majorit√© simple ; la proposition qui obtient le plus de voix l'emporte.**ok_",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/contactjulientran/defi1.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/contactjulientran/defi1/issues"
  },
  "homepage": "https://github.com/contactjulientran/defi1#readme",
  "dependencies": {
    "@openzeppelin/contracts": "^3.4.0",
    "chai": "^4.3.0",
    "dotenv": "^8.2.0",
    "truffle-hdwallet-provider": "^1.0.17"
  },
  "devDependencies": {
    "mocha": "^8.3.0"
  }
}